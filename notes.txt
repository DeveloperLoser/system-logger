Goal: Log/Obtain admin password/access

Plan A: Keylog UAC on printer update

    -UAC stops all non admin applications- allegedly

Plan B: Launch keylogger as admin via impersonating broken printer driver elevation
    prompt, tricking with pyinstaller, words VisualBasic Macros
    
    -Dude on stackoverflow was wrong, impossible

Plan C: Wait for lightspeed to update-Keylog admin password there 
(installer uses basic textbox for admin info, lul)

   -Waiting sucks

Plan D: Fake break lightspeed by just repeatedly killing the process(s)

    -Need elevated perms to terminate lightspeed apps, should have tested 
    closing them manually first..............

Plan E: Make identical UAC prompt with TKInter
    
    -TKinter doesnt have a win 10 theme... And I hate UI code

Plan F: Take screenshot of UAC- overlay invisible buttons/boxes & launch with
    word VB macro

    -Cant take screenshot of UAC, recreate printer error on home PC? 
    To lazy to make non admin account, cant lower UAC level to allow screenshot AND 
    force input of username/password

Plan G: Task scheduler prompt upon running install for printer drivers, 
    wait till download box appears then try to scdmng mmc.exe an elevated cmd 
    prompt every day 7 AM & allow run on demand

    -schtasks from command line doesnt show an administrator prompt

Plan H: Plan B, but after being elevated, Plan G task is created

    -Tried it without testing, they started to enter info into the real but fake 
    prompt but got spooked by it being unverified, logged into own account and
    fixed printer bug, fuck.

    -VB Macro couldve been better, it was running on the old short timer so it 
    opened itself before he clicked on it, that also spooked him.

Plan I1: Fake installer/updater for something like Li-Clipse, Plan G without printer 
    stuff

    -LiClipse install link is blocked by the filter, put it on a USB stick later?

Plan I2: Vexcode Pro installer needs admin, whatever printer stuff I was doing but 
    that instead, ALSO, launch vexcode installer with the script, so that it doesnt 
    ask for admin twice. Installer is verified, and this is not, buuuuuut maybeeee?

    -Tom didn't seem to notice the diffrent trust levels between my fake, and the
    real installer. Error below I think caused the installer to take way to long to
    open, so I installed the real installer again and ran it

    -I forgot to update the username, 
    despite having that in my TODO. Have to find some other installer or some shit 
    to BS them
    
    -Also worth noting that the Fax application bug that I set as the trigger needs 
    admin, just doesnt send a consent prompt if on an admin account; trigger and
    still be activated manually however so no great loss; I can probably look into
    making my own event/event id that gets triggered with something in cmd, or even
    make a hackermanz'y console. Learn more abt windows events and UI code

Plan J: Use above method to first set UAC settings to minimum; so that keylogger can run and capture input into the prompt (maybe?)


TODO:
~Fix elevation prompt showing for real installer- Installer launches properly 
    with admin, but prompt is still shown? #03 - Actually kinda interesting
~Add a flashy UI
~Dynamic file paths

Other ideas:
~Look at ways of recreating printer bug, looks like he changed the default
    printer or its IP
~Theres a post-it with 2 username/password combos marked HS above back desk,
    get a picture?
~Lots of potential with schtasks, fake bugs, etc.
~Password wasnt entered for lightspeed installer- but it(lightspeed apps) request 
    one outside of UAC. Disassemble installer? Or is it just getting it over the net (wireshark).
~Set UAC to minimum using existing methods, then keylog. This requires 2 prompts, and policy might forbid it
~Wait a period after script is elevated, then launch cmd.exe since it seems that after being elevated, 
    programs run out of the elevated users directory (i.e tdoyle) theoretically making HighestAvailable
    their admin priveleges. Then create a local admin account of my own, and turn off event log's network connection
~Local admin account can have password changed, have it changed to null or 123456?

Notes:
~Plan I2 works on local, and to great effect. 
    Needs to be bundled into one EXE to work so that the elevated key is properly-
    given to task and real_installe, and they are run elevated
~Funny thing is, it works to well. 
    Windows defender detects the exe as a virus and quarantines it, 
    but AFTER it makes the task; 
    Side effect is that ID 15 is sent, and elevated prompt instantly opens
~I'm starting to think what im trying to do with Task Scheduler isnt possible. It seems that when setting-
    the task to run as a certain account, and specifying HighestAvailable priority,
    its the highest available on the account its running from. Issue is, when
    specifying a diffrent account than local, a win7(I think?) style UAC elevation
    prompt is displayed that takes a User, Group, or Security policy cert, and
    a password that doesnt work, nor do I think even exists; Unless theres some 
    research I have to do into access tokens. Anyways the result is a "glitch"? 
    that prevents elevation through task scheduler in the way im trying to do it. 
    I think.

Accounts to remember:
Candy Evans - Admin0 ~ Forest admin? Three more of these "admin0" accounts exist
Candy Evans - Admin1
Candy Evans - Admin2
Dovahkiin Dragonborn ~ Love this guy (Also did marvel characters at charlestown?)
Steve Rodgers ~ 333333@student.gvsd.org, password 333333? Murica'
gvimage gvimage ~ Default image for vmware, etc?
GVSD LDAP Query Account
LDAP Query
WiFi Phones ~ Lots of fun
Willistown Township ~ Nope, not fucking with da po-lease(?)
Charles Patriot ~ Ah yes, very subtle test account . Or is it? Pivot.
